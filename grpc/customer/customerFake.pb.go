// Code generated by protoc-gen-go. DO NOT EDIT.
// source: customerFake.proto

package customer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FakeCustomerRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FakeCustomerRequest) Reset()         { *m = FakeCustomerRequest{} }
func (m *FakeCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*FakeCustomerRequest) ProtoMessage()    {}
func (*FakeCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cacb7a73f96165c0, []int{0}
}

func (m *FakeCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FakeCustomerRequest.Unmarshal(m, b)
}
func (m *FakeCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FakeCustomerRequest.Marshal(b, m, deterministic)
}
func (m *FakeCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FakeCustomerRequest.Merge(m, src)
}
func (m *FakeCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_FakeCustomerRequest.Size(m)
}
func (m *FakeCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FakeCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FakeCustomerRequest proto.InternalMessageInfo

func (m *FakeCustomerRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FakeCustomerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FakeCustomerRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type FakeCustomerFilter struct {
	Keyword              string   `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FakeCustomerFilter) Reset()         { *m = FakeCustomerFilter{} }
func (m *FakeCustomerFilter) String() string { return proto.CompactTextString(m) }
func (*FakeCustomerFilter) ProtoMessage()    {}
func (*FakeCustomerFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_cacb7a73f96165c0, []int{1}
}

func (m *FakeCustomerFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FakeCustomerFilter.Unmarshal(m, b)
}
func (m *FakeCustomerFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FakeCustomerFilter.Marshal(b, m, deterministic)
}
func (m *FakeCustomerFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FakeCustomerFilter.Merge(m, src)
}
func (m *FakeCustomerFilter) XXX_Size() int {
	return xxx_messageInfo_FakeCustomerFilter.Size(m)
}
func (m *FakeCustomerFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_FakeCustomerFilter.DiscardUnknown(m)
}

var xxx_messageInfo_FakeCustomerFilter proto.InternalMessageInfo

func (m *FakeCustomerFilter) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

type FakeResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FakeResponse) Reset()         { *m = FakeResponse{} }
func (m *FakeResponse) String() string { return proto.CompactTextString(m) }
func (*FakeResponse) ProtoMessage()    {}
func (*FakeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cacb7a73f96165c0, []int{2}
}

func (m *FakeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FakeResponse.Unmarshal(m, b)
}
func (m *FakeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FakeResponse.Marshal(b, m, deterministic)
}
func (m *FakeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FakeResponse.Merge(m, src)
}
func (m *FakeResponse) XXX_Size() int {
	return xxx_messageInfo_FakeResponse.Size(m)
}
func (m *FakeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FakeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FakeResponse proto.InternalMessageInfo

func (m *FakeResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FakeResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*FakeCustomerRequest)(nil), "customer.FakeCustomerRequest")
	proto.RegisterType((*FakeCustomerFilter)(nil), "customer.FakeCustomerFilter")
	proto.RegisterType((*FakeResponse)(nil), "customer.FakeResponse")
}

func init() { proto.RegisterFile("customerFake.proto", fileDescriptor_cacb7a73f96165c0) }

var fileDescriptor_cacb7a73f96165c0 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x37, 0xd5, 0x75, 0x77, 0x07, 0x11, 0x1c, 0x45, 0xc2, 0xa2, 0xb0, 0xe4, 0xb4, 0xa7,
	0x20, 0x7a, 0xf1, 0xbe, 0xb0, 0x9e, 0x44, 0x08, 0xbe, 0x40, 0x6d, 0x07, 0x2c, 0xb5, 0x4d, 0xcd,
	0xa4, 0x88, 0xcf, 0xe5, 0x0b, 0x4a, 0xd3, 0x46, 0x2c, 0x95, 0xbd, 0xe5, 0xff, 0x26, 0x33, 0x7f,
	0xfe, 0x0c, 0x60, 0xd6, 0xb2, 0xb7, 0x15, 0xb9, 0x7d, 0x5a, 0x92, 0x6e, 0x9c, 0xf5, 0x16, 0x97,
	0x91, 0xa9, 0x67, 0xb8, 0xe8, 0xf8, 0x6e, 0xd0, 0x86, 0x3e, 0x5a, 0x62, 0x8f, 0x67, 0x90, 0x14,
	0xb9, 0x14, 0x1b, 0xb1, 0x9d, 0x9b, 0xa4, 0xc8, 0x11, 0xe1, 0xb8, 0x4e, 0x2b, 0x92, 0xc9, 0x46,
	0x6c, 0x57, 0x26, 0x9c, 0xf1, 0x12, 0xe6, 0xcd, 0x9b, 0xad, 0x49, 0x1e, 0x05, 0xd8, 0x0b, 0xa5,
	0x01, 0xff, 0x0e, 0xdc, 0x17, 0xef, 0x9e, 0x1c, 0x4a, 0x58, 0x94, 0xf4, 0xf5, 0x69, 0x5d, 0x3f,
	0x74, 0x65, 0xa2, 0x54, 0x0f, 0x70, 0xda, 0xdd, 0x37, 0xc4, 0x8d, 0xad, 0x99, 0x26, 0xce, 0x12,
	0x16, 0xdc, 0x66, 0x19, 0x31, 0x07, 0xf3, 0xa5, 0x89, 0xf2, 0xee, 0x5b, 0xf4, 0xad, 0xd1, 0x0a,
	0x5f, 0xe0, 0xfc, 0x91, 0x7c, 0x87, 0x1c, 0xff, 0xc2, 0x6b, 0x1d, 0xb3, 0xea, 0xe9, 0xbb, 0xd6,
	0x37, 0xff, 0x57, 0x87, 0x6f, 0x50, 0xb3, 0x5b, 0x81, 0x4f, 0x80, 0x3b, 0x47, 0xa9, 0xa7, 0x91,
	0xd7, 0xe1, 0xc6, 0xf5, 0xd5, 0xb8, 0x1c, 0xd3, 0xa9, 0xd9, 0xeb, 0x49, 0xd8, 0xc0, 0xfd, 0x4f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x56, 0x31, 0xc2, 0xae, 0x97, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FakeCustomerClient is the client API for FakeCustomer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FakeCustomerClient interface {
	GetFakersCustomer(ctx context.Context, in *FakeCustomerFilter, opts ...grpc.CallOption) (FakeCustomer_GetFakersCustomerClient, error)
	CreateFakeCustomer(ctx context.Context, in *FakeCustomerRequest, opts ...grpc.CallOption) (*FakeResponse, error)
}

type fakeCustomerClient struct {
	cc *grpc.ClientConn
}

func NewFakeCustomerClient(cc *grpc.ClientConn) FakeCustomerClient {
	return &fakeCustomerClient{cc}
}

func (c *fakeCustomerClient) GetFakersCustomer(ctx context.Context, in *FakeCustomerFilter, opts ...grpc.CallOption) (FakeCustomer_GetFakersCustomerClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FakeCustomer_serviceDesc.Streams[0], "/customer.FakeCustomer/GetFakersCustomer", opts...)
	if err != nil {
		return nil, err
	}
	x := &fakeCustomerGetFakersCustomerClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FakeCustomer_GetFakersCustomerClient interface {
	Recv() (*FakeCustomerRequest, error)
	grpc.ClientStream
}

type fakeCustomerGetFakersCustomerClient struct {
	grpc.ClientStream
}

func (x *fakeCustomerGetFakersCustomerClient) Recv() (*FakeCustomerRequest, error) {
	m := new(FakeCustomerRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *fakeCustomerClient) CreateFakeCustomer(ctx context.Context, in *FakeCustomerRequest, opts ...grpc.CallOption) (*FakeResponse, error) {
	out := new(FakeResponse)
	err := c.cc.Invoke(ctx, "/customer.FakeCustomer/CreateFakeCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FakeCustomerServer is the server API for FakeCustomer service.
type FakeCustomerServer interface {
	GetFakersCustomer(*FakeCustomerFilter, FakeCustomer_GetFakersCustomerServer) error
	CreateFakeCustomer(context.Context, *FakeCustomerRequest) (*FakeResponse, error)
}

// UnimplementedFakeCustomerServer can be embedded to have forward compatible implementations.
type UnimplementedFakeCustomerServer struct {
}

func (*UnimplementedFakeCustomerServer) GetFakersCustomer(req *FakeCustomerFilter, srv FakeCustomer_GetFakersCustomerServer) error {
	return status.Errorf(codes.Unimplemented, "method GetFakersCustomer not implemented")
}
func (*UnimplementedFakeCustomerServer) CreateFakeCustomer(ctx context.Context, req *FakeCustomerRequest) (*FakeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFakeCustomer not implemented")
}

func RegisterFakeCustomerServer(s *grpc.Server, srv FakeCustomerServer) {
	s.RegisterService(&_FakeCustomer_serviceDesc, srv)
}

func _FakeCustomer_GetFakersCustomer_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FakeCustomerFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FakeCustomerServer).GetFakersCustomer(m, &fakeCustomerGetFakersCustomerServer{stream})
}

type FakeCustomer_GetFakersCustomerServer interface {
	Send(*FakeCustomerRequest) error
	grpc.ServerStream
}

type fakeCustomerGetFakersCustomerServer struct {
	grpc.ServerStream
}

func (x *fakeCustomerGetFakersCustomerServer) Send(m *FakeCustomerRequest) error {
	return x.ServerStream.SendMsg(m)
}

func _FakeCustomer_CreateFakeCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FakeCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FakeCustomerServer).CreateFakeCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/customer.FakeCustomer/CreateFakeCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FakeCustomerServer).CreateFakeCustomer(ctx, req.(*FakeCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FakeCustomer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "customer.FakeCustomer",
	HandlerType: (*FakeCustomerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateFakeCustomer",
			Handler:    _FakeCustomer_CreateFakeCustomer_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetFakersCustomer",
			Handler:       _FakeCustomer_GetFakersCustomer_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "customerFake.proto",
}
